(function(){angular.module("maestrano.transac",["transac.components","transac.common","ngSanitize"]).config(["$httpProvider",function(n){return n.defaults.headers.common.Accept="application/json",n.defaults.headers.common["Content-Type"]="application/json"}])}).call(this),function(){angular.module("transac.common",["transac.top-bar"])}.call(this),function(){angular.module("transac.components",["transac.transactions"])}.call(this),function(){angular.module("transac.top-bar",[]).constant("MENUS",[{title:"Transactions",active:!0},{title:"History",active:!1}]).value("EventEmitter",function(n){return{$event:n}})}.call(this),function(){angular.module("transac.transactions",[]).value("EventEmitter",function(n){return{$event:n}})}.call(this),angular.module("maestrano.transac").run(["$templateCache",function(n){n.put("transac",'<top-bar ng-show="$ctrl.isTopBarShown" on-select-menu="$ctrl.onTopBarSelectMenu($event)" transactions-count="$ctrl.transactionsCount"></top-bar>\n\n<transactions on-transactions-change="$ctrl.updateTransactionsCount($event)" on-reconciling="$ctrl.toggleTopBar($event)"></transactions>\n'),n.put("common/top-bar",'<div class="menu">\n  <a href="" class="menu-tab" ng-class="{ \'active\': menu.active }" ng-click="$ctrl.onMenuItemClick(menu)" ng-repeat="menu in $ctrl.menus track by $index">\n    <h5>{{::menu.title}} ({{$ctrl.getCount(menu)}})</h5>\n  </a>\n</div>\n'),n.put("components/transactions/transaction",'<div ng-class="{ \'selected\': $ctrl.isSelected }">\n  <div class="summary">\n    <a href="" class="summary-title" ng-click="$ctrl.selectOnClick()">\n      <div class="summary-title-caption">\n        <span>{{::$ctrl.title()}}</span>\n      </div>\n      <div class="summary-title-warning">\n        <div ng-if="$ctrl.hasMatches()">\n          <i class="fa fa-exclamation-triangle fa-lg"></i>\n          <span>This record may be a duplicate</span>\n        </div>\n      </div>\n    </a>\n    <div class="summary-actions">\n      <button type="button" class="summary-actions-action--deny" ng-click="$ctrl.denyOnClick()">\n        <i class="fa fa-times fa-2x"></i>\n      </button>\n      <button type="button" class="summary-actions-action--approve" ng-click="$ctrl.approveOnClick(true)">\n        <i class="fa fa-check fa-2x"></i>\n      </button>\n    </div>\n  </div>\n  <div class="detail" ng-if="$ctrl.isSelected">\n    <div class="row">\n      <div class="col-md-6 detail-section no-gutters">\n        <transaction-changes changes="$ctrl.changes"></transaction-changes>\n      </div>\n      <div class="col-md-3 detail-section no-gutters">\n        <div class="detail-section-title">\n          <h5>Select apps to share with:</h5>\n        </div>\n        <div class="detail-section-app" ng-repeat="mapping in ::$ctrl.transaction.mappings track by mapping.group_id" ng-click="$ctrl.selectAppOnClick($event, mapping)">\n          <span>{{::mapping.app_name}}</span>\n          <input type="checkbox" ng-checked="mapping.sharedWith">\n        </div>\n      </div>\n      <div class="col-md-3 detail-section no-gutters">\n        <div class="detail-section-action detail-section-action--approve" ng-click="$ctrl.approveOnClick()">\n          <span>Approve only this time</span>\n          <button type="button">\n            <i class="fa fa-check fa-2x"></i>\n          </button>\n        </div>\n        <div class="detail-section-action detail-section-action--deny" ng-click="$ctrl.denyOnClick(true)">\n          <span>Never share this record</span>\n          <button type="button">\n            <i class="fa fa-ban"></i>\n          </button>\n        </div>\n        <div class="detail-section-action detail-section-action--duplicate" ng-click="$ctrl.reconcileOnClick()" ng-if="$ctrl.hasMatches()">\n          <span>This record is a duplicate</span>\n          <button type="button">\n            <i class="fa fa-link fa-2x"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n    <div ng-if="$ctrl.hasMatches()">\n      <div class="row detail-spacers">\n        <div class="detail-spacers-spacer detail-spacers-spacer--left"></div>\n        <div class="detail-spacers-title">\n          <div>\n            <i class="fa fa-exclamation fa-lg"></i>\n            <span>Potential Duplicates</span>\n          </div>\n        </div>\n        <div class="detail-spacers-spacer detail-spacers-spacer--right"></div>\n      </div>\n      <div class="row">\n        <div class="col-md-12 col-xs-12 detail-section detail-section-matches">\n          <div ng-repeat="match in ::$ctrl.matches" class="detail-section-matches-match">\n            {{::$ctrl.matchTitle(match)}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'),n.put("components/transactions/transaction-changes",'<div class="table-responsive">\n  <table class="table table-striped borderless">\n    <tr>\n      <th ng-if="$ctrl.onSelect">Tick</th>\n      <th>Field</th>\n      <th>Value</th>\n    </tr>\n    <tr ng-repeat="(key, value) in ::$ctrl.changes">\n      <td ng-if="$ctrl.onSelect"><input type="checkbox"></td>\n      <td>{{::key}}</td>\n      <td>{{::value}}</td>\n    </tr>\n  </table>\n</div>\n'),n.put("components/transactions/transaction-reconcile",'<div class="top-panel">\n  <button class="top-panel_action-btns" ng-click="$ctrl.back()">\n    <i class="fa fa-angle-double-left fa-2x"></i>\n  </button>\n  <div class="top-panel_title">\n    <span>Reconcile duplicate records</span>\n  </div>\n  <button class="top-panel_action-btns right-align" ng-if="$ctrl.editing" ng-click="$ctrl.next()">\n    <i class="fa fa-angle-double-right fa-2x"></i>\n  </button>\n</div>\n<div class="edit" ng-show="$ctrl.editing">\n  <div class="edit_txs">\n    <div class="edit_txs_tx" ng-repeat="transaction in ::$ctrl.transactions track by transaction.id">\n      <div class="edit_txs_tx_topbar row no-gutters" ng-click="$ctrl.onSelect(transaction)">\n        <div class="edit_txs_tx_topbar_checkbox">\n          <input type="checkbox" ng-checked="$ctrl.txsSelectionMap[transaction.id]">\n        </div>\n        <div class="edit_txs_tx_topbar_text">\n          <h5>Transaction</h5>\n          <span>From {{::transaction.app_name}}</span>\n        </div>\n      </div>\n      <transaction-changes changes="::transaction.formatted"></transaction-changes>\n    </div>\n  </div>\n</div>\n<div class="review" ng-hide="$ctrl.editing">\n  <button class="review_done-btn" ng-if="!$ctrl.editing" ng-click="$ctrl.publish()">Done</button>\n</div>\n'),n.put("components/transactions/transactions",'<div ng-hide="$ctrl.reconciling">\n  <!-- <transactions-controls></transactions-controls> -->\n  <transaction transaction="transaction" ng-repeat="transaction in $ctrl.transactions track by transaction.transaction_log.id" on-commit="$ctrl.onTransactionCommit($event)" on-reconcile="$ctrl.onReconcileTransactions($event)"></transaction>\n</div>\n<div ng-if="$ctrl.reconciling">\n  <transaction-reconcile transaction="$ctrl.reconcileData.transaction" matches="$ctrl.reconcileData.matches" on-reconciled="$ctrl.onTransactionReconciled($event)"></transaction-reconcile>\n</div>\n')}]),function(){angular.module("maestrano.transac").component("transac",{bindings:{},templateUrl:"transac",controller:function(){var n;n=this,n.$onInit=function(){return n.isTopBarShown=!0,n.transactionsCount=0},n.onTopBarSelectMenu=function(n){var t;return t=n.menu,console.log("selected menu: ",t)},n.updateTransactionsCount=function(t){var a,c;return a=t.count,c=t.topbar,n.transactionsCount=a},n.toggleTopBar=function(t){var a;return a=t.isReconciling,n.isTopBarShown=!a}}})}.call(this),function(){angular.module("transac.top-bar").component("topBar",{bindings:{onSelectMenu:"&",transactionsCount:"<"},templateUrl:"common/top-bar",controller:["MENUS","EventEmitter",function(n,t){var a;a=this,a.$onInit=function(){return a.menus=n},a.onMenuItemClick=function(n){return _.each(a.menus,function(n){n.active=!1}),n.active=!0,a.onSelectMenu(t({menu:n}))},a.getCount=function(n){return n.title&&a[n.title.toLowerCase()+"Count"]||0}}]})}.call(this),function(){angular.module("transac.transactions").service("TransactionsService",["$http",function(n){var t;return t=this,this.get=function(){var t;return t="/bower_components/transac/src/transac/components/transactions/transactions.json",n.get(t,{}).then(function(n){return _.flatten(_.values(n.data))},function(n){return console.error(n)})},this.commit=function(n,t){var a,c;return null==t&&(t=[]),a=["group_id","commit","auto_commit","pull_disabled","push_disabled"],c={mappings:_.map(t,function(n){return _.pick(n,a)})},console.log("TransactionsService.commit ",n,c)},this.matches=function(t,a){var c;return c=_.includes(t,"organizations"),t="/bower_components/transac/src/transac/components/transactions/transactions-matching.json",n.get(t).then(function(n){return c?n.data.organizations:[]},function(n){return console.error(n)})},this.formatTitle=function(n){var t,a,c;return t=n.transaction_log.action.toLowerCase(),a=n.transaction_log.entity_type.split("::").slice(-1)[0].toLowerCase(),c=function(){switch(a){case"account":return _.get(n.changes,"name","No account name found");case"creditnote":return _.get(n.changes,"transaction_number")+" ("+_.get(n.changes,"type")+")";case"organization":return _.get(n.changes,"name","No organization name found")}}(),t+" "+a+": "+c},this.formatMatchTitle=function(n){var t,a,c;return a=function(){switch(n.resource_type){case"organizations":return t=_.map(n,function(n,t){if(_.includes(t,["is_"])&&n===!0)return t}),t=_.compact(t)[0],c=t.split("_").slice(-1),"Pending Transaction | Create "+c+": "+n.name}}()},this.flattenObject=function(n,a,c){return null==a&&(a={}),null==c&&(c=null),_.isObject(n)?_.each(n,function(n,i){return t.flattenObject(n,a,(c?c+"_":"")+i)}):a[c]=n,a},this.buildFormattedChanges=function(n){var a;return a=_.pick(n,["name","status","address","email","phone","referred_leads","website"]),n.formatted=t.flattenObject(a),n},this}])}.call(this),function(){angular.module("transac.transactions").component("transaction",{bindings:{transaction:"<",onCommit:"&",onReconcile:"&"},templateUrl:"components/transactions/transaction",controller:["TransactionsService","EventEmitter",function(n,t){var a;a=this,a.$onInit=function(){return a.changes=n.flattenObject(a.transaction.changes),_.each(a.transaction.mappings,function(n){return n.sharedWith=!0}),n.matches(a.transaction.links.matches).then(function(n){return a.matches=n},function(n){})},a.title=function(){return n.formatTitle(a.transaction)},a.matchTitle=function(t){return n.formatMatchTitle(t)},a.hasMatches=function(){return a.matches&&a.matches.length},a.selectOnClick=function(){return a.isSelected=!a.isSelected},a.approveOnClick=function(c){return null==c&&(c=!1),_.each(a.transaction.mappings,function(n){n.commit=n.sharedWith,n.auto_commit=c}),n.commit(a.transaction.links.commit,a.transaction.mappings),a.onCommit(t({transaction:a.transaction}))},a.denyOnClick=function(c){return null==c&&(c=!1),_.each(a.transaction.mappings,function(n){n.commit=!n.sharedWith,n.push_disabled=c}),n.commit(a.transaction.links.commit,a.transaction.mappings),a.onCommit(t({transaction:a.transaction}))},a.reconcileOnClick=function(){var n;if(a.hasMatches())return n=angular.merge({},a.transaction.transaction_log,a.transaction.changes),a.onReconcile(t({transaction:n,matches:a.matches}))},a.selectAppOnClick=function(n,t){return t.sharedWith=!t.sharedWith}}]})}.call(this),function(){angular.module("transac.transactions").component("transactionChanges",{bindings:{changes:"<",onSelect:"&?"},templateUrl:"components/transactions/transaction-changes",controller:["EventEmitter",function(n){var t;t=this,t.$onInit=function(){}}]})}.call(this),function(){angular.module("transac.transactions").component("transactionReconcile",{bindings:{transaction:"<",matches:"<",onReconciled:"&"},templateUrl:"components/transactions/transaction-reconcile",controller:["EventEmitter",function(n){var t;t=this,t.$onInit=function(){return t.editing=!0,t.transactions=[].concat(t.transaction,t.matches),t.txsSelectionMap={},_.each(_.map(t.transactions,function(n){return n.id}),function(n){t.txsSelectionMap[n]=!1})},t.onSelect=function(n){return _.each(t.txsSelectionMap,function(a,c){c!==n.id&&(t.txsSelectionMap[c]=!1)}),t.txsSelectionMap[n.id]=!t.txsSelectionMap[n.id]},t.next=function(){return t.editing=!1},t.publish=function(){return t.onReconciled(n({id:t.transaction.id,matches:_.map(t.matches,function(n){return n.id}),attributes:{}}))},t.back=function(){return t.editing?t.onReconciled(n(null)):t.editing=!0}}]})}.call(this),function(){angular.module("transac.transactions").component("transactions",{bindings:{onTransactionsChange:"&",onReconciling:"&"},templateUrl:"components/transactions/transactions",controller:["EventEmitter","TransactionsService",function(n,t){var a;a=this,a.$onInit=function(){return a.reconciling=!1,t.get().then(function(t){return a.transactions=t,a.onTransactionsChange(n({count:a.transactions.length}))},function(n){})},a.onTransactionCommit=function(t){var c;return c=t.transaction,a.transactions=_.reject(a.transactions,function(n){return n.transaction_log.id===c.transaction_log.id}),a.onTransactionsChange(n({count:a.transactions.length}))},a.onReconcileTransactions=function(c){var i,e;return e=c.transaction,i=c.matches,a.reconcileData={transaction:t.buildFormattedChanges(e),matches:_.map(i,function(n){return t.buildFormattedChanges(n)})},a.reconciling=!0,a.onReconciling(n({isReconciling:!0}))},a.onTransactionReconciled=function(t){if(a.reconcileData=null,a.reconciling=!1,a.onReconciling(n({isReconciling:!1})),null!=t)return a.transactions=_.reject(a.transactions,function(n){return n.transaction_log.id===t.id}),a.onTransactionsChange(n({count:a.transactions.length}))}}]})}.call(this);